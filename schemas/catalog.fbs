namespace protocol;

table Catalog{
    plans: Plans;
}


table Station {
  id: ulong;
  stop: ulong;
  transform: Transform;
  block: [ulong];
  inputs: [ulong];
}

table LanguageTransform {
    language: string;
    query: string;
}

union TransformType{
    LanguageTransform
}

table Transform {
  name: string;
  type: TransformType;
}


table KeyValueU64VecU64 {
  key: ulong;
  value: [ulong];
}

table KeyValueU64Station {
  key: ulong;
  value: Station;
}


table KeyValueStringTransform {
  key: string (required);
  value: Transform (required);
}

table Source {
    id: ulong;
    name: string (required);
    type: string (required);
}

table Destination {
    id: ulong;
    name: string (required);
    type: string (required);
}

table KeyValueU64Source {
  key: ulong;
  value: Source (required);
}

table KeyValueU64Destination {
  key: ulong;
  value: Destination (required);
}

enum PlanStatus : byte {
  Running,
  Stopped,
  Error
}

table Plan {
  id: ulong;
  name: string;
  template: string;

  lines: [KeyValueU64VecU64];
  stations: [KeyValueU64Station];
  stations_to_in_outs: [KeyValueU64VecU64];

  sources: [KeyValueU64Source];
  destinations: [KeyValueU64Destination];

  status: PlanStatus;
  transforms: [KeyValueStringTransform];
}


table Plans {
    plans: [Plan] (required);
}