namespace protocol;
union CreateType {
    CreatePlan
}

table Register{
    id: long = null;
    catalog: Catalog;
}

table Create {
    create_type: CreateType;
}

table CreatePlan {
    name: string;
    plan: string;
}

table ByName {
    name: string;
}

union FilterType {
    ByName,
}

table Filter {
    filter_type: FilterType;
}

table GetPlans {
    name: Filter;
}

table GetPlan {
    id: ulong;
}

union GetType {
    GetPlans,
    GetPlan
}

table Get {
    get_type: GetType;
}

table Catalog{
    plans: Plans;
}


table Station {
  id:ulong;
  stop:ulong;
  transform: Transform;
  block: [ulong];
  inputs: [ulong];
}

table LanguageTransform {
    language: string;
    query: string;
}

union TransformType{
    LanguageTransform
}

table Transform {
  name:string;
  type: TransformType;
}


table KeyValueU64VecU64 {
  key:ulong;
  value:[ulong];
}

table KeyValueU64Station {
  key:ulong;
  value:Station;
}


table KeyValueStringTransform {
  key:string;
  value:Transform;
}

table Source {
    id: ulong;
    name: string;
    type: string;
}

table Destination {
    id: ulong;
    name: string;
    type: string;
}

table KeyValueU64Source {
  key:ulong;
  value:Source;
}

table KeyValueU64Destination {
  key:ulong;
  value:Destination;
}

enum PlanStatus : byte {
  Running,
  Stopped,
  Error
}

table Plan {
  id:ulong;
  name:string;
  template:string;

  lines:[KeyValueU64VecU64];
  stations:[KeyValueU64Station];
  stations_to_in_outs:[KeyValueU64VecU64];

  sources: [KeyValueU64Source];
  destinations: [KeyValueU64Destination];

  status:PlanStatus;
  transforms:[KeyValueStringTransform];
}


table Plans {
    plans: [Plan];
}

union Value {
    Null,
    Text,
    Bool,
    Integer,
    Float,
    List,
    Document,
    Time
}

table Null {}

table Time {
    data: long;
}

table Bool {
    data: bool;
}

table Text {
    data: string;
}

table Integer {
    data: long;
}

table Float {
    data: float;
}

table ValueWrapper {
    data: Value;
}

table List {
    data: [ValueWrapper];
}

table KeyValue {
    key: Value;
    values: Value;
}

table Document {
    data: [KeyValue];
}

table Train {
    values: [ValueWrapper];
    topic: string;
    event_time: Time;
}

table Status {
    msg: string;
}

table Bind {
    plan_id: ulong;
    stop_id: ulong;
}

table Unbind {
    plan_id: ulong;
    stop_id: ulong;
}

union Payload {
    Create,
    Get,
    Train,
    Catalog,
    Register,
    Bind,
    Unbind
}


table Message {
  data: Payload;
  status: Status;
}

root_type Message;
