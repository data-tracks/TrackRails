// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import { Events } from '../protocol/events.js';
import { Values } from '../protocol/values.js';


export enum ValuesOrEvents {
  NONE = 0,
  Values = 1,
  Events = 2
}

export function unionToValuesOrEvents(
  type: ValuesOrEvents,
  accessor: (obj:Events|Values) => Events|Values|null
): Events|Values|null {
  switch(ValuesOrEvents[type]) {
    case 'NONE': return null; 
    case 'Values': return accessor(new Values())! as Values;
    case 'Events': return accessor(new Events())! as Events;
    default: return null;
  }
}

export function unionListToValuesOrEvents(
  type: ValuesOrEvents, 
  accessor: (index: number, obj:Events|Values) => Events|Values|null, 
  index: number
): Events|Values|null {
  switch(ValuesOrEvents[type]) {
    case 'NONE': return null; 
    case 'Values': return accessor(index, new Values())! as Values;
    case 'Events': return accessor(index, new Events())! as Events;
    default: return null;
  }
}
