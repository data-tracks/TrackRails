// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import { ErrorStatus } from '../protocol/error-status.js';
import { OkStatus } from '../protocol/ok-status.js';


export enum Status {
  NONE = 0,
  OkStatus = 1,
  ErrorStatus = 2
}

export function unionToStatus(
  type: Status,
  accessor: (obj:ErrorStatus|OkStatus) => ErrorStatus|OkStatus|null
): ErrorStatus|OkStatus|null {
  switch(Status[type]) {
    case 'NONE': return null; 
    case 'OkStatus': return accessor(new OkStatus())! as OkStatus;
    case 'ErrorStatus': return accessor(new ErrorStatus())! as ErrorStatus;
    default: return null;
  }
}

export function unionListToStatus(
  type: Status, 
  accessor: (index: number, obj:ErrorStatus|OkStatus) => ErrorStatus|OkStatus|null, 
  index: number
): ErrorStatus|OkStatus|null {
  switch(Status[type]) {
    case 'NONE': return null; 
    case 'OkStatus': return accessor(index, new OkStatus())! as OkStatus;
    case 'ErrorStatus': return accessor(index, new ErrorStatus())! as ErrorStatus;
    default: return null;
  }
}
