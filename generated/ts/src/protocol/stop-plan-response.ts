// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';

export class StopPlanResponse {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):StopPlanResponse {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsStopPlanResponse(bb:flatbuffers.ByteBuffer, obj?:StopPlanResponse):StopPlanResponse {
  return (obj || new StopPlanResponse()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsStopPlanResponse(bb:flatbuffers.ByteBuffer, obj?:StopPlanResponse):StopPlanResponse {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new StopPlanResponse()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

alreadyStopped():boolean {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;
}

static startStopPlanResponse(builder:flatbuffers.Builder) {
  builder.startObject(1);
}

static addAlreadyStopped(builder:flatbuffers.Builder, alreadyStopped:boolean) {
  builder.addFieldInt8(0, +alreadyStopped, +false);
}

static endStopPlanResponse(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createStopPlanResponse(builder:flatbuffers.Builder, alreadyStopped:boolean):flatbuffers.Offset {
  StopPlanResponse.startStopPlanResponse(builder);
  StopPlanResponse.addAlreadyStopped(builder, alreadyStopped);
  return StopPlanResponse.endStopPlanResponse(builder);
}
}
