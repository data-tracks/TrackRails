// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import { Delete } from '../protocol/delete.js';
import { Insert } from '../protocol/insert.js';
import { Update } from '../protocol/update.js';


export enum Event {
  NONE = 0,
  Insert = 1,
  Delete = 2,
  Update = 3
}

export function unionToEvent(
  type: Event,
  accessor: (obj:Delete|Insert|Update) => Delete|Insert|Update|null
): Delete|Insert|Update|null {
  switch(Event[type]) {
    case 'NONE': return null; 
    case 'Insert': return accessor(new Insert())! as Insert;
    case 'Delete': return accessor(new Delete())! as Delete;
    case 'Update': return accessor(new Update())! as Update;
    default: return null;
  }
}

export function unionListToEvent(
  type: Event, 
  accessor: (index: number, obj:Delete|Insert|Update) => Delete|Insert|Update|null, 
  index: number
): Delete|Insert|Update|null {
  switch(Event[type]) {
    case 'NONE': return null; 
    case 'Insert': return accessor(index, new Insert())! as Insert;
    case 'Delete': return accessor(index, new Delete())! as Delete;
    case 'Update': return accessor(index, new Update())! as Update;
    default: return null;
  }
}
