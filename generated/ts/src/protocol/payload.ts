// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import { BindRequest } from '../protocol/bind-request.js';
import { BindResponse } from '../protocol/bind-response.js';
import { Catalog } from '../protocol/catalog.js';
import { CreatePlanRequest } from '../protocol/create-plan-request.js';
import { CreatePlanResponse } from '../protocol/create-plan-response.js';
import { DeletePlanRequest } from '../protocol/delete-plan-request.js';
import { DeletePlanResponse } from '../protocol/delete-plan-response.js';
import { Disconnect } from '../protocol/disconnect.js';
import { GetPlanRequest } from '../protocol/get-plan-request.js';
import { GetPlansRequest } from '../protocol/get-plans-request.js';
import { RegisterRequest } from '../protocol/register-request.js';
import { RegisterResponse } from '../protocol/register-response.js';
import { StartPlanRequest } from '../protocol/start-plan-request.js';
import { StartPlanResponse } from '../protocol/start-plan-response.js';
import { StopPlanRequest } from '../protocol/stop-plan-request.js';
import { StopPlanResponse } from '../protocol/stop-plan-response.js';
import { Train } from '../protocol/train.js';
import { UnbindRequest } from '../protocol/unbind-request.js';
import { UnbindResponse } from '../protocol/unbind-response.js';


export enum Payload {
  NONE = 0,
  CreatePlanRequest = 1,
  CreatePlanResponse = 2,
  DeletePlanRequest = 3,
  DeletePlanResponse = 4,
  StartPlanRequest = 5,
  StartPlanResponse = 6,
  StopPlanRequest = 7,
  StopPlanResponse = 8,
  GetPlanRequest = 9,
  GetPlansRequest = 10,
  Train = 11,
  Catalog = 12,
  RegisterRequest = 13,
  RegisterResponse = 14,
  BindRequest = 15,
  BindResponse = 16,
  UnbindRequest = 17,
  UnbindResponse = 18,
  Disconnect = 19
}

export function unionToPayload(
  type: Payload,
  accessor: (obj:BindRequest|BindResponse|Catalog|CreatePlanRequest|CreatePlanResponse|DeletePlanRequest|DeletePlanResponse|Disconnect|GetPlanRequest|GetPlansRequest|RegisterRequest|RegisterResponse|StartPlanRequest|StartPlanResponse|StopPlanRequest|StopPlanResponse|Train|UnbindRequest|UnbindResponse) => BindRequest|BindResponse|Catalog|CreatePlanRequest|CreatePlanResponse|DeletePlanRequest|DeletePlanResponse|Disconnect|GetPlanRequest|GetPlansRequest|RegisterRequest|RegisterResponse|StartPlanRequest|StartPlanResponse|StopPlanRequest|StopPlanResponse|Train|UnbindRequest|UnbindResponse|null
): BindRequest|BindResponse|Catalog|CreatePlanRequest|CreatePlanResponse|DeletePlanRequest|DeletePlanResponse|Disconnect|GetPlanRequest|GetPlansRequest|RegisterRequest|RegisterResponse|StartPlanRequest|StartPlanResponse|StopPlanRequest|StopPlanResponse|Train|UnbindRequest|UnbindResponse|null {
  switch(Payload[type]) {
    case 'NONE': return null; 
    case 'CreatePlanRequest': return accessor(new CreatePlanRequest())! as CreatePlanRequest;
    case 'CreatePlanResponse': return accessor(new CreatePlanResponse())! as CreatePlanResponse;
    case 'DeletePlanRequest': return accessor(new DeletePlanRequest())! as DeletePlanRequest;
    case 'DeletePlanResponse': return accessor(new DeletePlanResponse())! as DeletePlanResponse;
    case 'StartPlanRequest': return accessor(new StartPlanRequest())! as StartPlanRequest;
    case 'StartPlanResponse': return accessor(new StartPlanResponse())! as StartPlanResponse;
    case 'StopPlanRequest': return accessor(new StopPlanRequest())! as StopPlanRequest;
    case 'StopPlanResponse': return accessor(new StopPlanResponse())! as StopPlanResponse;
    case 'GetPlanRequest': return accessor(new GetPlanRequest())! as GetPlanRequest;
    case 'GetPlansRequest': return accessor(new GetPlansRequest())! as GetPlansRequest;
    case 'Train': return accessor(new Train())! as Train;
    case 'Catalog': return accessor(new Catalog())! as Catalog;
    case 'RegisterRequest': return accessor(new RegisterRequest())! as RegisterRequest;
    case 'RegisterResponse': return accessor(new RegisterResponse())! as RegisterResponse;
    case 'BindRequest': return accessor(new BindRequest())! as BindRequest;
    case 'BindResponse': return accessor(new BindResponse())! as BindResponse;
    case 'UnbindRequest': return accessor(new UnbindRequest())! as UnbindRequest;
    case 'UnbindResponse': return accessor(new UnbindResponse())! as UnbindResponse;
    case 'Disconnect': return accessor(new Disconnect())! as Disconnect;
    default: return null;
  }
}

export function unionListToPayload(
  type: Payload, 
  accessor: (index: number, obj:BindRequest|BindResponse|Catalog|CreatePlanRequest|CreatePlanResponse|DeletePlanRequest|DeletePlanResponse|Disconnect|GetPlanRequest|GetPlansRequest|RegisterRequest|RegisterResponse|StartPlanRequest|StartPlanResponse|StopPlanRequest|StopPlanResponse|Train|UnbindRequest|UnbindResponse) => BindRequest|BindResponse|Catalog|CreatePlanRequest|CreatePlanResponse|DeletePlanRequest|DeletePlanResponse|Disconnect|GetPlanRequest|GetPlansRequest|RegisterRequest|RegisterResponse|StartPlanRequest|StartPlanResponse|StopPlanRequest|StopPlanResponse|Train|UnbindRequest|UnbindResponse|null, 
  index: number
): BindRequest|BindResponse|Catalog|CreatePlanRequest|CreatePlanResponse|DeletePlanRequest|DeletePlanResponse|Disconnect|GetPlanRequest|GetPlansRequest|RegisterRequest|RegisterResponse|StartPlanRequest|StartPlanResponse|StopPlanRequest|StopPlanResponse|Train|UnbindRequest|UnbindResponse|null {
  switch(Payload[type]) {
    case 'NONE': return null; 
    case 'CreatePlanRequest': return accessor(index, new CreatePlanRequest())! as CreatePlanRequest;
    case 'CreatePlanResponse': return accessor(index, new CreatePlanResponse())! as CreatePlanResponse;
    case 'DeletePlanRequest': return accessor(index, new DeletePlanRequest())! as DeletePlanRequest;
    case 'DeletePlanResponse': return accessor(index, new DeletePlanResponse())! as DeletePlanResponse;
    case 'StartPlanRequest': return accessor(index, new StartPlanRequest())! as StartPlanRequest;
    case 'StartPlanResponse': return accessor(index, new StartPlanResponse())! as StartPlanResponse;
    case 'StopPlanRequest': return accessor(index, new StopPlanRequest())! as StopPlanRequest;
    case 'StopPlanResponse': return accessor(index, new StopPlanResponse())! as StopPlanResponse;
    case 'GetPlanRequest': return accessor(index, new GetPlanRequest())! as GetPlanRequest;
    case 'GetPlansRequest': return accessor(index, new GetPlansRequest())! as GetPlansRequest;
    case 'Train': return accessor(index, new Train())! as Train;
    case 'Catalog': return accessor(index, new Catalog())! as Catalog;
    case 'RegisterRequest': return accessor(index, new RegisterRequest())! as RegisterRequest;
    case 'RegisterResponse': return accessor(index, new RegisterResponse())! as RegisterResponse;
    case 'BindRequest': return accessor(index, new BindRequest())! as BindRequest;
    case 'BindResponse': return accessor(index, new BindResponse())! as BindResponse;
    case 'UnbindRequest': return accessor(index, new UnbindRequest())! as UnbindRequest;
    case 'UnbindResponse': return accessor(index, new UnbindResponse())! as UnbindResponse;
    case 'Disconnect': return accessor(index, new Disconnect())! as Disconnect;
    default: return null;
  }
}
