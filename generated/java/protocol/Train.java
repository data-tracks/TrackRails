// automatically generated by the FlatBuffers compiler, do not modify

package protocol;

import com.google.flatbuffers.BaseVector;
import com.google.flatbuffers.BooleanVector;
import com.google.flatbuffers.ByteVector;
import com.google.flatbuffers.Constants;
import com.google.flatbuffers.DoubleVector;
import com.google.flatbuffers.FlatBufferBuilder;
import com.google.flatbuffers.FloatVector;
import com.google.flatbuffers.IntVector;
import com.google.flatbuffers.LongVector;
import com.google.flatbuffers.ShortVector;
import com.google.flatbuffers.StringVector;
import com.google.flatbuffers.Struct;
import com.google.flatbuffers.Table;
import com.google.flatbuffers.UnionVector;
import java.nio.ByteBuffer;
import java.nio.ByteOrder;

@SuppressWarnings("unused")
public final class Train extends Table {
  public static void ValidateVersion() { Constants.FLATBUFFERS_25_2_10(); }
  public static Train getRootAsTrain(ByteBuffer _bb) { return getRootAsTrain(_bb, new Train()); }
  public static Train getRootAsTrain(ByteBuffer _bb, Train obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __reset(_i, _bb); }
  public Train __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public protocol.TrainContent content() { return content(new protocol.TrainContent()); }
  public protocol.TrainContent content(protocol.TrainContent obj) { int o = __offset(4); return o != 0 ? obj.__assign(__indirect(o + bb_pos), bb) : null; }
  public String topic() { int o = __offset(6); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer topicAsByteBuffer() { return __vector_as_bytebuffer(6, 1); }
  public ByteBuffer topicInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 6, 1); }
  public protocol.Time eventTime() { return eventTime(new protocol.Time()); }
  public protocol.Time eventTime(protocol.Time obj) { int o = __offset(8); return o != 0 ? obj.__assign(__indirect(o + bb_pos), bb) : null; }

  public static int createTrain(FlatBufferBuilder builder,
      int contentOffset,
      int topicOffset,
      int eventTimeOffset) {
    builder.startTable(3);
    Train.addEventTime(builder, eventTimeOffset);
    Train.addTopic(builder, topicOffset);
    Train.addContent(builder, contentOffset);
    return Train.endTrain(builder);
  }

  public static void startTrain(FlatBufferBuilder builder) { builder.startTable(3); }
  public static void addContent(FlatBufferBuilder builder, int contentOffset) { builder.addOffset(0, contentOffset, 0); }
  public static void addTopic(FlatBufferBuilder builder, int topicOffset) { builder.addOffset(1, topicOffset, 0); }
  public static void addEventTime(FlatBufferBuilder builder, int eventTimeOffset) { builder.addOffset(2, eventTimeOffset, 0); }
  public static int endTrain(FlatBufferBuilder builder) {
    int o = builder.endTable();
    builder.required(o, 4);  // content
    return o;
  }

  public static final class Vector extends BaseVector {
    public Vector __assign(int _vector, int _element_size, ByteBuffer _bb) { __reset(_vector, _element_size, _bb); return this; }

    public Train get(int j) { return get(new Train(), j); }
    public Train get(Train obj, int j) {  return obj.__assign(__indirect(__element(j), bb), bb); }
  }
}

