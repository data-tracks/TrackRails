// automatically generated by the FlatBuffers compiler, do not modify

package protocol;

import com.google.flatbuffers.BaseVector;
import com.google.flatbuffers.BooleanVector;
import com.google.flatbuffers.ByteVector;
import com.google.flatbuffers.Constants;
import com.google.flatbuffers.DoubleVector;
import com.google.flatbuffers.FlatBufferBuilder;
import com.google.flatbuffers.FloatVector;
import com.google.flatbuffers.IntVector;
import com.google.flatbuffers.LongVector;
import com.google.flatbuffers.ShortVector;
import com.google.flatbuffers.StringVector;
import com.google.flatbuffers.Struct;
import com.google.flatbuffers.Table;
import com.google.flatbuffers.UnionVector;
import java.nio.ByteBuffer;
import java.nio.ByteOrder;

@SuppressWarnings("unused")
public final class Plan extends Table {
  public static void ValidateVersion() { Constants.FLATBUFFERS_25_2_10(); }
  public static Plan getRootAsPlan(ByteBuffer _bb) { return getRootAsPlan(_bb, new Plan()); }
  public static Plan getRootAsPlan(ByteBuffer _bb, Plan obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __reset(_i, _bb); }
  public Plan __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public long id() { int o = __offset(4); return o != 0 ? bb.getLong(o + bb_pos) : 0L; }
  public String name() { int o = __offset(6); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer nameAsByteBuffer() { return __vector_as_bytebuffer(6, 1); }
  public ByteBuffer nameInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 6, 1); }
  public String template() { int o = __offset(8); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer templateAsByteBuffer() { return __vector_as_bytebuffer(8, 1); }
  public ByteBuffer templateInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 8, 1); }
  public protocol.KeyValueU64VecU64 lines(int j) { return lines(new protocol.KeyValueU64VecU64(), j); }
  public protocol.KeyValueU64VecU64 lines(protocol.KeyValueU64VecU64 obj, int j) { int o = __offset(10); return o != 0 ? obj.__assign(__indirect(__vector(o) + j * 4), bb) : null; }
  public int linesLength() { int o = __offset(10); return o != 0 ? __vector_len(o) : 0; }
  public protocol.KeyValueU64VecU64.Vector linesVector() { return linesVector(new protocol.KeyValueU64VecU64.Vector()); }
  public protocol.KeyValueU64VecU64.Vector linesVector(protocol.KeyValueU64VecU64.Vector obj) { int o = __offset(10); return o != 0 ? obj.__assign(__vector(o), 4, bb) : null; }
  public protocol.KeyValueU64Station stations(int j) { return stations(new protocol.KeyValueU64Station(), j); }
  public protocol.KeyValueU64Station stations(protocol.KeyValueU64Station obj, int j) { int o = __offset(12); return o != 0 ? obj.__assign(__indirect(__vector(o) + j * 4), bb) : null; }
  public int stationsLength() { int o = __offset(12); return o != 0 ? __vector_len(o) : 0; }
  public protocol.KeyValueU64Station.Vector stationsVector() { return stationsVector(new protocol.KeyValueU64Station.Vector()); }
  public protocol.KeyValueU64Station.Vector stationsVector(protocol.KeyValueU64Station.Vector obj) { int o = __offset(12); return o != 0 ? obj.__assign(__vector(o), 4, bb) : null; }
  public protocol.KeyValueU64VecU64 stationsToInOuts(int j) { return stationsToInOuts(new protocol.KeyValueU64VecU64(), j); }
  public protocol.KeyValueU64VecU64 stationsToInOuts(protocol.KeyValueU64VecU64 obj, int j) { int o = __offset(14); return o != 0 ? obj.__assign(__indirect(__vector(o) + j * 4), bb) : null; }
  public int stationsToInOutsLength() { int o = __offset(14); return o != 0 ? __vector_len(o) : 0; }
  public protocol.KeyValueU64VecU64.Vector stationsToInOutsVector() { return stationsToInOutsVector(new protocol.KeyValueU64VecU64.Vector()); }
  public protocol.KeyValueU64VecU64.Vector stationsToInOutsVector(protocol.KeyValueU64VecU64.Vector obj) { int o = __offset(14); return o != 0 ? obj.__assign(__vector(o), 4, bb) : null; }
  public protocol.KeyValueU64Source sources(int j) { return sources(new protocol.KeyValueU64Source(), j); }
  public protocol.KeyValueU64Source sources(protocol.KeyValueU64Source obj, int j) { int o = __offset(16); return o != 0 ? obj.__assign(__indirect(__vector(o) + j * 4), bb) : null; }
  public int sourcesLength() { int o = __offset(16); return o != 0 ? __vector_len(o) : 0; }
  public protocol.KeyValueU64Source.Vector sourcesVector() { return sourcesVector(new protocol.KeyValueU64Source.Vector()); }
  public protocol.KeyValueU64Source.Vector sourcesVector(protocol.KeyValueU64Source.Vector obj) { int o = __offset(16); return o != 0 ? obj.__assign(__vector(o), 4, bb) : null; }
  public protocol.KeyValueU64Destination destinations(int j) { return destinations(new protocol.KeyValueU64Destination(), j); }
  public protocol.KeyValueU64Destination destinations(protocol.KeyValueU64Destination obj, int j) { int o = __offset(18); return o != 0 ? obj.__assign(__indirect(__vector(o) + j * 4), bb) : null; }
  public int destinationsLength() { int o = __offset(18); return o != 0 ? __vector_len(o) : 0; }
  public protocol.KeyValueU64Destination.Vector destinationsVector() { return destinationsVector(new protocol.KeyValueU64Destination.Vector()); }
  public protocol.KeyValueU64Destination.Vector destinationsVector(protocol.KeyValueU64Destination.Vector obj) { int o = __offset(18); return o != 0 ? obj.__assign(__vector(o), 4, bb) : null; }
  public byte status() { int o = __offset(20); return o != 0 ? bb.get(o + bb_pos) : 0; }
  public protocol.KeyValueStringTransform transforms(int j) { return transforms(new protocol.KeyValueStringTransform(), j); }
  public protocol.KeyValueStringTransform transforms(protocol.KeyValueStringTransform obj, int j) { int o = __offset(22); return o != 0 ? obj.__assign(__indirect(__vector(o) + j * 4), bb) : null; }
  public int transformsLength() { int o = __offset(22); return o != 0 ? __vector_len(o) : 0; }
  public protocol.KeyValueStringTransform.Vector transformsVector() { return transformsVector(new protocol.KeyValueStringTransform.Vector()); }
  public protocol.KeyValueStringTransform.Vector transformsVector(protocol.KeyValueStringTransform.Vector obj) { int o = __offset(22); return o != 0 ? obj.__assign(__vector(o), 4, bb) : null; }

  public static int createPlan(FlatBufferBuilder builder,
      long id,
      int nameOffset,
      int templateOffset,
      int linesOffset,
      int stationsOffset,
      int stationsToInOutsOffset,
      int sourcesOffset,
      int destinationsOffset,
      byte status,
      int transformsOffset) {
    builder.startTable(10);
    Plan.addId(builder, id);
    Plan.addTransforms(builder, transformsOffset);
    Plan.addDestinations(builder, destinationsOffset);
    Plan.addSources(builder, sourcesOffset);
    Plan.addStationsToInOuts(builder, stationsToInOutsOffset);
    Plan.addStations(builder, stationsOffset);
    Plan.addLines(builder, linesOffset);
    Plan.addTemplate(builder, templateOffset);
    Plan.addName(builder, nameOffset);
    Plan.addStatus(builder, status);
    return Plan.endPlan(builder);
  }

  public static void startPlan(FlatBufferBuilder builder) { builder.startTable(10); }
  public static void addId(FlatBufferBuilder builder, long id) { builder.addLong(0, id, 0L); }
  public static void addName(FlatBufferBuilder builder, int nameOffset) { builder.addOffset(1, nameOffset, 0); }
  public static void addTemplate(FlatBufferBuilder builder, int templateOffset) { builder.addOffset(2, templateOffset, 0); }
  public static void addLines(FlatBufferBuilder builder, int linesOffset) { builder.addOffset(3, linesOffset, 0); }
  public static int createLinesVector(FlatBufferBuilder builder, int[] data) { builder.startVector(4, data.length, 4); for (int i = data.length - 1; i >= 0; i--) builder.addOffset(data[i]); return builder.endVector(); }
  public static void startLinesVector(FlatBufferBuilder builder, int numElems) { builder.startVector(4, numElems, 4); }
  public static void addStations(FlatBufferBuilder builder, int stationsOffset) { builder.addOffset(4, stationsOffset, 0); }
  public static int createStationsVector(FlatBufferBuilder builder, int[] data) { builder.startVector(4, data.length, 4); for (int i = data.length - 1; i >= 0; i--) builder.addOffset(data[i]); return builder.endVector(); }
  public static void startStationsVector(FlatBufferBuilder builder, int numElems) { builder.startVector(4, numElems, 4); }
  public static void addStationsToInOuts(FlatBufferBuilder builder, int stationsToInOutsOffset) { builder.addOffset(5, stationsToInOutsOffset, 0); }
  public static int createStationsToInOutsVector(FlatBufferBuilder builder, int[] data) { builder.startVector(4, data.length, 4); for (int i = data.length - 1; i >= 0; i--) builder.addOffset(data[i]); return builder.endVector(); }
  public static void startStationsToInOutsVector(FlatBufferBuilder builder, int numElems) { builder.startVector(4, numElems, 4); }
  public static void addSources(FlatBufferBuilder builder, int sourcesOffset) { builder.addOffset(6, sourcesOffset, 0); }
  public static int createSourcesVector(FlatBufferBuilder builder, int[] data) { builder.startVector(4, data.length, 4); for (int i = data.length - 1; i >= 0; i--) builder.addOffset(data[i]); return builder.endVector(); }
  public static void startSourcesVector(FlatBufferBuilder builder, int numElems) { builder.startVector(4, numElems, 4); }
  public static void addDestinations(FlatBufferBuilder builder, int destinationsOffset) { builder.addOffset(7, destinationsOffset, 0); }
  public static int createDestinationsVector(FlatBufferBuilder builder, int[] data) { builder.startVector(4, data.length, 4); for (int i = data.length - 1; i >= 0; i--) builder.addOffset(data[i]); return builder.endVector(); }
  public static void startDestinationsVector(FlatBufferBuilder builder, int numElems) { builder.startVector(4, numElems, 4); }
  public static void addStatus(FlatBufferBuilder builder, byte status) { builder.addByte(8, status, 0); }
  public static void addTransforms(FlatBufferBuilder builder, int transformsOffset) { builder.addOffset(9, transformsOffset, 0); }
  public static int createTransformsVector(FlatBufferBuilder builder, int[] data) { builder.startVector(4, data.length, 4); for (int i = data.length - 1; i >= 0; i--) builder.addOffset(data[i]); return builder.endVector(); }
  public static void startTransformsVector(FlatBufferBuilder builder, int numElems) { builder.startVector(4, numElems, 4); }
  public static int endPlan(FlatBufferBuilder builder) {
    int o = builder.endTable();
    return o;
  }

  public static final class Vector extends BaseVector {
    public Vector __assign(int _vector, int _element_size, ByteBuffer _bb) { __reset(_vector, _element_size, _bb); return this; }

    public Plan get(int j) { return get(new Plan(), j); }
    public Plan get(Plan obj, int j) {  return obj.__assign(__indirect(__element(j), bb), bb); }
  }
}

