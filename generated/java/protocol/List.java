// automatically generated by the FlatBuffers compiler, do not modify

package protocol;

import com.google.flatbuffers.BaseVector;
import com.google.flatbuffers.BooleanVector;
import com.google.flatbuffers.ByteVector;
import com.google.flatbuffers.Constants;
import com.google.flatbuffers.DoubleVector;
import com.google.flatbuffers.FlatBufferBuilder;
import com.google.flatbuffers.FloatVector;
import com.google.flatbuffers.IntVector;
import com.google.flatbuffers.LongVector;
import com.google.flatbuffers.ShortVector;
import com.google.flatbuffers.StringVector;
import com.google.flatbuffers.Struct;
import com.google.flatbuffers.Table;
import com.google.flatbuffers.UnionVector;
import java.nio.ByteBuffer;
import java.nio.ByteOrder;

@SuppressWarnings("unused")
public final class List extends Table {
  public static void ValidateVersion() { Constants.FLATBUFFERS_25_2_10(); }
  public static List getRootAsList(ByteBuffer _bb) { return getRootAsList(_bb, new List()); }
  public static List getRootAsList(ByteBuffer _bb, List obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __reset(_i, _bb); }
  public List __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public protocol.ValueWrapper data(int j) { return data(new protocol.ValueWrapper(), j); }
  public protocol.ValueWrapper data(protocol.ValueWrapper obj, int j) { int o = __offset(4); return o != 0 ? obj.__assign(__indirect(__vector(o) + j * 4), bb) : null; }
  public int dataLength() { int o = __offset(4); return o != 0 ? __vector_len(o) : 0; }
  public protocol.ValueWrapper.Vector dataVector() { return dataVector(new protocol.ValueWrapper.Vector()); }
  public protocol.ValueWrapper.Vector dataVector(protocol.ValueWrapper.Vector obj) { int o = __offset(4); return o != 0 ? obj.__assign(__vector(o), 4, bb) : null; }

  public static int createList(FlatBufferBuilder builder,
      int dataOffset) {
    builder.startTable(1);
    List.addData(builder, dataOffset);
    return List.endList(builder);
  }

  public static void startList(FlatBufferBuilder builder) { builder.startTable(1); }
  public static void addData(FlatBufferBuilder builder, int dataOffset) { builder.addOffset(0, dataOffset, 0); }
  public static int createDataVector(FlatBufferBuilder builder, int[] data) { builder.startVector(4, data.length, 4); for (int i = data.length - 1; i >= 0; i--) builder.addOffset(data[i]); return builder.endVector(); }
  public static void startDataVector(FlatBufferBuilder builder, int numElems) { builder.startVector(4, numElems, 4); }
  public static int endList(FlatBufferBuilder builder) {
    int o = builder.endTable();
    builder.required(o, 4);  // data
    return o;
  }

  public static final class Vector extends BaseVector {
    public Vector __assign(int _vector, int _element_size, ByteBuffer _bb) { __reset(_vector, _element_size, _bb); return this; }

    public List get(int j) { return get(new List(), j); }
    public List get(List obj, int j) {  return obj.__assign(__indirect(__element(j), bb), bb); }
  }
}

