// automatically generated by the FlatBuffers compiler, do not modify

package protocol;

import com.google.flatbuffers.BaseVector;
import com.google.flatbuffers.BooleanVector;
import com.google.flatbuffers.ByteVector;
import com.google.flatbuffers.Constants;
import com.google.flatbuffers.DoubleVector;
import com.google.flatbuffers.FlatBufferBuilder;
import com.google.flatbuffers.FloatVector;
import com.google.flatbuffers.IntVector;
import com.google.flatbuffers.LongVector;
import com.google.flatbuffers.ShortVector;
import com.google.flatbuffers.StringVector;
import com.google.flatbuffers.Struct;
import com.google.flatbuffers.Table;
import com.google.flatbuffers.UnionVector;
import java.nio.ByteBuffer;
import java.nio.ByteOrder;

@SuppressWarnings("unused")
public final class KeyValue extends Table {
  public static void ValidateVersion() { Constants.FLATBUFFERS_25_2_10(); }
  public static KeyValue getRootAsKeyValue(ByteBuffer _bb) { return getRootAsKeyValue(_bb, new KeyValue()); }
  public static KeyValue getRootAsKeyValue(ByteBuffer _bb, KeyValue obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __reset(_i, _bb); }
  public KeyValue __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public byte keyType() { int o = __offset(4); return o != 0 ? bb.get(o + bb_pos) : 0; }
  public Table key(Table obj) { int o = __offset(6); return o != 0 ? __union(obj, o + bb_pos) : null; }
  public byte valuesType() { int o = __offset(8); return o != 0 ? bb.get(o + bb_pos) : 0; }
  public Table values(Table obj) { int o = __offset(10); return o != 0 ? __union(obj, o + bb_pos) : null; }

  public static int createKeyValue(FlatBufferBuilder builder,
      byte keyType,
      int keyOffset,
      byte valuesType,
      int valuesOffset) {
    builder.startTable(4);
    KeyValue.addValues(builder, valuesOffset);
    KeyValue.addKey(builder, keyOffset);
    KeyValue.addValuesType(builder, valuesType);
    KeyValue.addKeyType(builder, keyType);
    return KeyValue.endKeyValue(builder);
  }

  public static void startKeyValue(FlatBufferBuilder builder) { builder.startTable(4); }
  public static void addKeyType(FlatBufferBuilder builder, byte keyType) { builder.addByte(0, keyType, 0); }
  public static void addKey(FlatBufferBuilder builder, int keyOffset) { builder.addOffset(1, keyOffset, 0); }
  public static void addValuesType(FlatBufferBuilder builder, byte valuesType) { builder.addByte(2, valuesType, 0); }
  public static void addValues(FlatBufferBuilder builder, int valuesOffset) { builder.addOffset(3, valuesOffset, 0); }
  public static int endKeyValue(FlatBufferBuilder builder) {
    int o = builder.endTable();
    builder.required(o, 6);  // key
    builder.required(o, 10);  // values
    return o;
  }

  public static final class Vector extends BaseVector {
    public Vector __assign(int _vector, int _element_size, ByteBuffer _bb) { __reset(_vector, _element_size, _bb); return this; }

    public KeyValue get(int j) { return get(new KeyValue(), j); }
    public KeyValue get(KeyValue obj, int j) {  return obj.__assign(__indirect(__element(j), bb), bb); }
  }
}

