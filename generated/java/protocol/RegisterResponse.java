// automatically generated by the FlatBuffers compiler, do not modify

package protocol;

import com.google.flatbuffers.BaseVector;
import com.google.flatbuffers.BooleanVector;
import com.google.flatbuffers.ByteVector;
import com.google.flatbuffers.Constants;
import com.google.flatbuffers.DoubleVector;
import com.google.flatbuffers.FlatBufferBuilder;
import com.google.flatbuffers.FloatVector;
import com.google.flatbuffers.IntVector;
import com.google.flatbuffers.LongVector;
import com.google.flatbuffers.ShortVector;
import com.google.flatbuffers.StringVector;
import com.google.flatbuffers.Struct;
import com.google.flatbuffers.Table;
import com.google.flatbuffers.UnionVector;
import java.nio.ByteBuffer;
import java.nio.ByteOrder;

@SuppressWarnings("unused")
public final class RegisterResponse extends Table {
  public static void ValidateVersion() { Constants.FLATBUFFERS_25_2_10(); }
  public static RegisterResponse getRootAsRegisterResponse(ByteBuffer _bb) { return getRootAsRegisterResponse(_bb, new RegisterResponse()); }
  public static RegisterResponse getRootAsRegisterResponse(ByteBuffer _bb, RegisterResponse obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __reset(_i, _bb); }
  public RegisterResponse __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public boolean hasId() { return 0 != __offset(4); }
  public long id() { int o = __offset(4); return o != 0 ? bb.getLong(o + bb_pos) : 0L; }
  public String permissions(int j) { int o = __offset(6); return o != 0 ? __string(__vector(o) + j * 4) : null; }
  public int permissionsLength() { int o = __offset(6); return o != 0 ? __vector_len(o) : 0; }
  public StringVector permissionsVector() { return permissionsVector(new StringVector()); }
  public StringVector permissionsVector(StringVector obj) { int o = __offset(6); return o != 0 ? obj.__assign(__vector(o), 4, bb) : null; }
  public protocol.Catalog catalog() { return catalog(new protocol.Catalog()); }
  public protocol.Catalog catalog(protocol.Catalog obj) { int o = __offset(8); return o != 0 ? obj.__assign(__indirect(o + bb_pos), bb) : null; }

  public static int createRegisterResponse(FlatBufferBuilder builder,
      long id,
      int permissionsOffset,
      int catalogOffset) {
    builder.startTable(3);
    RegisterResponse.addId(builder, id);
    RegisterResponse.addCatalog(builder, catalogOffset);
    RegisterResponse.addPermissions(builder, permissionsOffset);
    return RegisterResponse.endRegisterResponse(builder);
  }

  public static void startRegisterResponse(FlatBufferBuilder builder) { builder.startTable(3); }
  public static void addId(FlatBufferBuilder builder, long id) { builder.addLong(0, id, 0L); }
  public static void addPermissions(FlatBufferBuilder builder, int permissionsOffset) { builder.addOffset(1, permissionsOffset, 0); }
  public static int createPermissionsVector(FlatBufferBuilder builder, int[] data) { builder.startVector(4, data.length, 4); for (int i = data.length - 1; i >= 0; i--) builder.addOffset(data[i]); return builder.endVector(); }
  public static void startPermissionsVector(FlatBufferBuilder builder, int numElems) { builder.startVector(4, numElems, 4); }
  public static void addCatalog(FlatBufferBuilder builder, int catalogOffset) { builder.addOffset(2, catalogOffset, 0); }
  public static int endRegisterResponse(FlatBufferBuilder builder) {
    int o = builder.endTable();
    return o;
  }

  public static final class Vector extends BaseVector {
    public Vector __assign(int _vector, int _element_size, ByteBuffer _bb) { __reset(_vector, _element_size, _bb); return this; }

    public RegisterResponse get(int j) { return get(new RegisterResponse(), j); }
    public RegisterResponse get(RegisterResponse obj, int j) {  return obj.__assign(__indirect(__element(j), bb), bb); }
  }
}

