// automatically generated by the FlatBuffers compiler, do not modify

package protocol;

import com.google.flatbuffers.BaseVector;
import com.google.flatbuffers.BooleanVector;
import com.google.flatbuffers.ByteVector;
import com.google.flatbuffers.Constants;
import com.google.flatbuffers.DoubleVector;
import com.google.flatbuffers.FlatBufferBuilder;
import com.google.flatbuffers.FloatVector;
import com.google.flatbuffers.IntVector;
import com.google.flatbuffers.LongVector;
import com.google.flatbuffers.ShortVector;
import com.google.flatbuffers.StringVector;
import com.google.flatbuffers.Struct;
import com.google.flatbuffers.Table;
import com.google.flatbuffers.UnionVector;
import java.nio.ByteBuffer;
import java.nio.ByteOrder;

@SuppressWarnings("unused")
public final class Station extends Table {
  public static void ValidateVersion() { Constants.FLATBUFFERS_24_3_25(); }
  public static Station getRootAsStation(ByteBuffer _bb) { return getRootAsStation(_bb, new Station()); }
  public static Station getRootAsStation(ByteBuffer _bb, Station obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __reset(_i, _bb); }
  public Station __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public long id() { int o = __offset(4); return o != 0 ? bb.getLong(o + bb_pos) : 0L; }
  public long stop() { int o = __offset(6); return o != 0 ? bb.getLong(o + bb_pos) : 0L; }
  public protocol.Transform transform() { return transform(new protocol.Transform()); }
  public protocol.Transform transform(protocol.Transform obj) { int o = __offset(8); return o != 0 ? obj.__assign(__indirect(o + bb_pos), bb) : null; }
  public long block(int j) { int o = __offset(10); return o != 0 ? bb.getLong(__vector(o) + j * 8) : 0; }
  public int blockLength() { int o = __offset(10); return o != 0 ? __vector_len(o) : 0; }
  public LongVector blockVector() { return blockVector(new LongVector()); }
  public LongVector blockVector(LongVector obj) { int o = __offset(10); return o != 0 ? obj.__assign(__vector(o), bb) : null; }
  public ByteBuffer blockAsByteBuffer() { return __vector_as_bytebuffer(10, 8); }
  public ByteBuffer blockInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 10, 8); }
  public long inputs(int j) { int o = __offset(12); return o != 0 ? bb.getLong(__vector(o) + j * 8) : 0; }
  public int inputsLength() { int o = __offset(12); return o != 0 ? __vector_len(o) : 0; }
  public LongVector inputsVector() { return inputsVector(new LongVector()); }
  public LongVector inputsVector(LongVector obj) { int o = __offset(12); return o != 0 ? obj.__assign(__vector(o), bb) : null; }
  public ByteBuffer inputsAsByteBuffer() { return __vector_as_bytebuffer(12, 8); }
  public ByteBuffer inputsInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 12, 8); }

  public static int createStation(FlatBufferBuilder builder,
      long id,
      long stop,
      int transformOffset,
      int blockOffset,
      int inputsOffset) {
    builder.startTable(5);
    Station.addStop(builder, stop);
    Station.addId(builder, id);
    Station.addInputs(builder, inputsOffset);
    Station.addBlock(builder, blockOffset);
    Station.addTransform(builder, transformOffset);
    return Station.endStation(builder);
  }

  public static void startStation(FlatBufferBuilder builder) { builder.startTable(5); }
  public static void addId(FlatBufferBuilder builder, long id) { builder.addLong(0, id, 0L); }
  public static void addStop(FlatBufferBuilder builder, long stop) { builder.addLong(1, stop, 0L); }
  public static void addTransform(FlatBufferBuilder builder, int transformOffset) { builder.addOffset(2, transformOffset, 0); }
  public static void addBlock(FlatBufferBuilder builder, int blockOffset) { builder.addOffset(3, blockOffset, 0); }
  public static int createBlockVector(FlatBufferBuilder builder, long[] data) { builder.startVector(8, data.length, 8); for (int i = data.length - 1; i >= 0; i--) builder.addLong(data[i]); return builder.endVector(); }
  public static void startBlockVector(FlatBufferBuilder builder, int numElems) { builder.startVector(8, numElems, 8); }
  public static void addInputs(FlatBufferBuilder builder, int inputsOffset) { builder.addOffset(4, inputsOffset, 0); }
  public static int createInputsVector(FlatBufferBuilder builder, long[] data) { builder.startVector(8, data.length, 8); for (int i = data.length - 1; i >= 0; i--) builder.addLong(data[i]); return builder.endVector(); }
  public static void startInputsVector(FlatBufferBuilder builder, int numElems) { builder.startVector(8, numElems, 8); }
  public static int endStation(FlatBufferBuilder builder) {
    int o = builder.endTable();
    return o;
  }

  public static final class Vector extends BaseVector {
    public Vector __assign(int _vector, int _element_size, ByteBuffer _bb) { __reset(_vector, _element_size, _bb); return this; }

    public Station get(int j) { return get(new Station(), j); }
    public Station get(Station obj, int j) {  return obj.__assign(__indirect(__element(j), bb), bb); }
  }
}

